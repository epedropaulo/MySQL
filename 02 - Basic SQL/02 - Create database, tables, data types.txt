Criando databases
Uma database é um container que armazena todas as suas tabelas. E
uma tabela armazena a data organizada em linhas e colunas. E a coluna
é um pedaço de data que é um atributo de uma entidade.
Uma linha é um conjunto de colunas que definem os atributos de uma
entidade.

Create database [nome da database]; -> Cria uma database completamente nova.

(É possível também em SQL, usar comandos para executar apenas sob certas
circunstâncias, um exemplo disso é o comando a seguir: 
CREATE DATABASE IF NOT EXISTS MovieIndustry; que pela sintaxe deixa claro.)

Drop database []; -> Deleta uma database.



Tipos de dados
Antes de começarmos a criar tabelas, examinaremos os conceitos de uma tabela.
As colunas necessitam da definição do tipo de data que ela carregará, é isso
que faz a tabela ser estruturada. E a maioria da categoria de data são:

. Numéricos: int, bigint, tinyint, decimal, etc.
. Data e hora: date, time, timestamp, year, etc.
. String: varchar, char, enum, set, blob, etc.
. Spatial Data representa localização, tamanho e formato de um objeto no
planeta Terra, como construções, lagos, montanhas e cidades.



Criando tabelas
Quando criamos tabelas, precisamos especificar seu nome, colunas e que tipo 
de data cada coluna suporta, e ainda existem outras coisas que podemos
especificar, mas ficará para depois.

Create table [nome da tabela](
    col1 <tipo de data> <Restrições>,
    col2 <tipo de data> <Restrições>,
    col3 <tipo de data> <Restrições>
)

Restrições
1. Em uma database relacional nós devemos identificar uma linha, escolhendo uma
coluna ou um conjunto de colunas como a chave primária. Uma forma muito comum
de identificarmos apenas uma linha é adicionarmos uma coluna ID, que recebe um
numérico diferente para cada linha da tabela, e para isso o MySQL tem uma função
muito interessante, chamada AUTO_INCREMENT que automaticamente da submit no 
próximo número inteiro.
2. Restringir as possibilidades de entrada, como por 
exemplo, impedir que seja posto como data o 'null', conhecido como vazio. E para
isso podemos marcar a coluna como: not null, assim o usuário é obrigado a passar
um valor valido para a coluna.
3. Também podemos usar um valor DEFAULT, para caso um parâmetro não seja passado,
será definido um valor padrão, para melhor análise posterior da data.

Lembrando que podemos aplicar essas restrições em conjunto, para criar uma database
que possui a data bem organizada e específica.

Tabelas temporárias
Existem tabém tabelas do tipo temporária, que é igual a uma tabela padrão. Entretanto
quando a interface do MySQL for finalizada essa tabela se apagará.
CREATE TEMPORARY TABLE [nome da tabela](
    <Colunas, tipo de data, restrições>
)